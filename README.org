* This is a configuration repository
   Each folder or file represents a set of configs that I use.

   - Most configs uses FiraMonoNerdFont, make sure to have it installed.

** Config texts
*** .bashrc

#+BEGIN_SRC bash
export PATH="$HOME/.emacs.d/bin:$PATH"
export PATH="$HOME/godot:$PATH"

alias emacs="emacsclient -c -a ''"
alias gvim="nvim --listen ./godothost ."

# fzf commands
alias g='cd $(find . -type d -print | fzf)' # Go to directory
alias f='nvim $(fzf)' # open File with nvim
alias k='ps aux | fzf | awk "{print $2}" | xargs kill' # Kill a process
#+END_SRC


*** Godot External Editor as DoomEmacs
- Caviat: Emacs client need to be open beforehand to work.
#+BEGIN_EXAMPLE
 exec path: emacsclient
 exec flags: -a "" +{line}:{col} {file}
#+END_EXAMPLE


*** Godot External Editor as NeoVim
**** Godot Config 
***** Exec path:
#+BEGIN_EXAMPLE
nvim
#+END_EXAMPLE

***** Exec flags:
#+BEGIN_EXAMPLE
--server ./godothost --remote-send "<C>:n {file}<CR>"
#+END_EXAMPLE

*** Opening nvim
On the project directory containing the .godot file, open nvim with the following command:
#+BEGIN_EXAMPLE
nvim --listen ./godothost .
#+END_EXAMPLE
It's good to setup an alias to open nvim this way, I have one in my bashrc called `gvim`

# ** Old Godot Method
# Use the files in the godot folder. 
# - Select the openGodotFile.sh for the exec flag.
# - To properly open files in the nvim, open the godot project containing the project.godot file and run /gvim/.

# - Godot config:
# #+BEGIN_EXAMPLE
#  exec path: /**Path_To**/openGodotFile.sh
#  exec flags: {file}
# #+END_EXAMPLE

# Usage example:
# #+BEGIN_EXAMPLE
#  ## In terminal.
#  # Goes to the godot project path.
#  cd my_godot_project
#  gvim 

# # gvim is the same as running: nvim --listen ~/.cache/nvim/godot.pipe .
# #+END_EXAMPLE
# Now you can click on godot editor script files and it will open in nvim.

