* This is a configuration repository
   Each folder or file represents a set of configs that I use.

   - Most configs uses FiraMonoNerdFont, make sure to have it installed.

** Config texts

*** Godot External Editor as DoomEmacs
- Caviat: Emacs client need to be open beforehand to work.
#+BEGIN_EXAMPLE
 exec path: emacsclient
 exec flags: -a "" +{line}:{col} {file}
#+END_EXAMPLE


*** Godot External Editor as NeoVim
**** Godot Config 
***** Exec path:
#+BEGIN_EXAMPLE
nvim
#+END_EXAMPLE

***** Exec flags:
#+BEGIN_EXAMPLE
--server ./.godothost --remote-send "<esc>:n {file}<CR>:call cursor({line},{col})<CR>"
#+END_EXAMPLE

Important, for improved debugging and when occurs a error, open the error in the external editor instead of the Godot script editor, the following options must be enabled:
Under the 'Script' Tab -> Go to Debug -> Debug with External Editor

Please refer to: https://github.com/mfussenegger/nvim-dap/wiki/Debug-Adapter-installation#godot-gdscript

*** Opening nvim
On the project directory containing the .godot file, open nvim with the following command:
#+BEGIN_EXAMPLE
nvim --listen ./.godothost
#+END_EXAMPLE
It's good to setup an alias to open nvim this way, I have one in my bashrc called `gvim`

# ** Old Godot Method
# Use the files in the godot folder. 
# - Select the openGodotFile.sh for the exec flag.
# - To properly open files in the nvim, open the godot project containing the project.godot file and run /gvim/.

# - Godot config:
# #+BEGIN_EXAMPLE
#  exec path: /**Path_To**/openGodotFile.sh
#  exec flags: {file}
# #+END_EXAMPLE

# Usage example:
# #+BEGIN_EXAMPLE
#  ## In terminal.
#  # Goes to the godot project path.
#  cd my_godot_project
#  gvim 

# # gvim is the same as running: nvim --listen ~/.cache/nvim/godot.pipe .
# #+END_EXAMPLE
# Now you can click on godot editor script files and it will open in nvim.

